---
name: autoscale.asg.add_node
version: '2.0'

workflows:
  add_node:
    description: Add nodes to an autoscale group
    type: direct
    input:
      - asg
    task-defaults:
      on-error:
        - fail
    tasks:
      get_chatops_channel:
        action: st2.kv.get
        input:
          key: 'asg.<% $.asg %>.channel'
        publish:
          channel: <% $.get_chatops_channel.result %>
        on-success:
          - generate_new_hostname
      generate_new_hostname:
        action: autoscale.generate_random_name count=2
        publish:
          hostname: <% $.generate_new_hostname.stdout %>
        on-success:
          - chatops_notify_begin
      chatops_notify_begin:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] OK! Spinning up additional node <% $.hostname %>```"
          channel: <% $.channel %>
        on-success:
          - get_ssh_key
      get_ssh_key:
        action: st2.kv.get
        input:
          key: 'ssh_pub_key'
        publish:
          ssh_pub_key: <% $.get_ssh_key.result %>
        on-success:
          - get_loadbalancer_id
        on-error:
          - failure_ssh_key_kvstore
      get_loadbalancer_id:
        action: st2.kv.get
        input:
          key: 'asg.<% $.asg %>.loadbalancer_id'
        publish:
          loadbalancer_id: <% $.get_loadbalancer_id.result %>
        on-success:
          - get_vm_size_id
        on-error:
          - failure_get_loadbalancer_id
      get_vm_size_id:
        action: st2.kv.get
        input:
          key: 'asg.<% $.asg %>.vm_size_id'
        publish:
          vm_size_id: <% $.get_vm_size_id.result %>
        on-success:
          - get_vm_image_id
        on-error:
          - failure_get_vm_size_id
      get_vm_image_id:
        action: st2.kv.get
        input:
          key: 'asg.<% $.asg %>.vm_image_id'
        publish:
          vm_image_id: <% $.get_vm_image_id.result %>
        on-success:
          - get_dns_zone_id
        on-error:
          - failure_get_vm_image_id
      get_dns_zone_id:
        action: st2.kv.get
        input:
          key: 'asg.<% $.asg %>.dns_zone_id'
        publish:
          dns_zone_id: <% $.get_dns_zone_id.result %>
        on-success:
          - get_domain
        on-error:
          - failure_get_dns_zone_id
      get_domain:
        action: st2.kv.get
        input:
          key: 'asg.<% $.asg %>.domain'
        publish:
          domain: <% $.get_domain.result %>
        on-success:
          - create_new_node
        on-error:
          - failure_get_domain
      create_new_node:
        action: rackspace.create_vm
        input:
          name: <% $.hostname %>
          flavor_id: <% $.vm_size_id %>
          image_id: <% $.vm_image_id %>
          key_material: <% $.ssh_pub_key %>
          metadata:
            asg: <% $.asg %>
        publish:
          ipv4_address: '<% $.create_new_node.result.public_ipv4 %>'
          ipv6_address: '<% $.create_new_node.result.public_ipv6 %>'
        on-success:
          - get_total_node_count
        on-error:
          - failure_create_new_node
      get_total_node_count:
        action: st2.kv.get
        input:
          key: "asg.<% $.asg %>.total_nodes"
        publish:
          total_nodes: <% $.get_total_node_count.result %>
        on-success:
          - increment_total_node_count
      increment_total_node_count:
        action: st2.kv.set
        input:
          key: "asg.<% $.asg %>.total_nodes"
          value: <% str(int($.total_nodes) + 1) %>
        on-success:
          - notify_successful_build
      notify_successful_build:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] Mission accomplished! Created new node <% $.hostname %> [<% $.ipv4_address %>]```"
          channel: <% $.channel %>
        on-success:
          - setup_ipv4_dns
      setup_ipv4_dns:
        action: rackspace.create_dns_record
        policies:
          wait-before: 1
        input:
          name: '<% $.hostname %>.<% $.asg %>.<% $.domain %>'
          zone_id: <% $.dns_zone_id %>
          type: 'A'
          data: <% $.ipv4_address %>
        on-success:
          - notify_dns_setup
        on-error:
          - failure_setup_ipv4_dns
      notify_dns_setup:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] DNS now setup for <% $.hostname %>.<% $.asg %>.<% $.domain %>```"
          channel: <% $.channel %>
        on-success:
          - refresh_apt_cache
      refresh_apt_cache:
        action: debian.apt_get_update
        input:
          hosts: <% $.ipv4_address %>
          username: root
        policies:
          wait-before: 5
        on-success:
          - notify_begin_chef_install
        on-error:
          - failure_refresh_apt_cache
      notify_begin_chef_install:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] Starting Chef Provisioner for <% $.hostname %>.```"
          channel: <% $.channel %>
        on-success:
          - provision_node
        on-error:
          - failure_chef_install
      provision_node:
        action: chef.solo
        policies:
          wait-before: 1
        input:
          username: root
          hosts: <% $.ipv4_address %>
          attributes: https://raw.githubusercontent.com/StackStorm/chef-st2-demo-webapp/master/runtime/dna.json
          recipe_url: https://github.com/StackStorm/chef-st2-demo-webapp/raw/master/runtime/cookbooks.tgz
          timeout: 600
        on-success:
          - notify_successful_provision
        on-error:
          - failure_provision_node
      notify_successful_provision:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] Node <% $.hostname %> successfully provisioned! Things are going so well```"
          channel: <% $.channel %>
        on-success:
          - add_ipv4_loadbalancer
      add_ipv4_loadbalancer:
        action: rackspace.add_node_to_loadbalancer
        policies:
          wait-before: 10
        input:
          loadbalancer_id: '<% $.loadbalancer_id %>'
          ip: <% $.ipv4_address %>
          port: '8080'
        on-success:
          - notify_added_to_lb
        on-error:
          - failure_add_lb
      notify_added_to_lb:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] Added <% $.hostname %> to lb.<% $.asg %>.<% $.domain %>```"
          channel: <% $.channel %>
      failure_ssh_key_kvstore:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to retrieve SSH Key from Keystore (ssh_pub_key)```"
          channel: <% $.channel %>
      failure_get_loadbalancer_id:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to retrieve Loadbalancer ID from Keystore (asg.<% $.asg %>.loadbalancer_id)```"
          channel: <% $.channel %>
      failure_get_vm_size_id:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to retrieve VM Size ID from Keystore (asg.<% $.asg %>.vm_size_id)```"
          channel: <% $.channel %>
      failure_get_vm_image_id:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to retrieve VM image ID from Keystore (asg.<% $.asg %>.vm_image_id)```"
          channel: <% $.channel %>
      failure_get_dns_zone_id:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to retrieve DNS Zone ID from Keystore (asg.<% $.asg %>.dns_zone_id)```"
          channel: <% $.channel %>
      failure_get_domain:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to retrieve Domain Name from Keystore (asg.<% $.asg %>.domain)```"
          channel: <% $.channel %>
      failure_create_new_node:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to provision new node. Check action history for more details.```"
          channel: <% $.channel %>
      failure_setup_ipv4_dns:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to create DNS for new node. Check action history for more details.```"
          channel: <% $.channel %>
      failure_refresh_apt_cache:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to update apt on <% $.hostname %>. Check action history for more details.```"
          channel: <% $.channel %>
      failure_chef_install:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to install chef on <% $.hostname %>. Check action history for more details.```"
          channel: <% $.channel %>
      failure_add_lb:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to add <% $.hostname %> to loadbalancer. Check action history for more details.```"
          channel: <% $.channel %>
      failure_provision_node:
        action: slack.post_message
        input:
          message: "```ASG[<% $.asg %>] FAILURE: Unable to provision chef on <% $.hostname %>. Check action history for more details.```"
          channel: <% $.channel %>
