---
name: autoscale.asg.delete_node
version: '2.0'

workflows:
  main:
    description: Delete a node from an Autoscale group
    input:
      - asg
      - name
    task-defaults:
      on-error:
        - fail
    tasks:
      get_domain:
        action: st2.kv.get
        input:
          key: 'asg.{$.asg}.domain'
        publish:
          domain: $.get_domain.result
        on-success:
          - get_node_ip
      get_node_ip:
        action: linux.dig
        input:
          nameserver: '8.8.8.8'
          hostname: '{$.name}.{$.asg}.{$.domain}'
        publish:
          ipv4_address: '{$.get_node_ip.result[0]'
        on-success:
          - get_loadbalancer_id
      get_loadbalancer_id:
        action: st2.kv.get
        input:
          key: 'asg.{$.asg}.loadbalancer_id'
        publish:
          loadbalancer_id: $.get_loadbalancer_id.result
        on-success:
          - get_dns_zone_id
      get_dns_zone_id:
        action: st2.kv.get
        input:
          key: 'asg.{$.asg}.dns_zone_id'
        publish:
          dns_zone_id: $.get_dns_zone_id.result
        on-success:
          - get_dns_record_id
      get_dns_record_id:
        action: rackspace.find_dns_record_id
        input:
          name: '{$.name}.{$.asg}.{$.domain}'
        publish:
          dns_record_id: $.get_dns_record_id.result
        on-success:
          - get_vm_id
      get_vm_id:
        action: rackspace.find_vm_id
        input:
          name: '{$.name}'
        publish:
          vm_id: $.get_vm_id.result
        on-success:
          - remove_node_loadbalancer
      remove_node_loadbalancer:
        action: rackspace.delete_node_from_loadbalancer
        input:
          loadbalancer_id: $.loadbalancer_id
          ip: $.ipv4_address


